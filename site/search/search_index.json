{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4ee3\u7801\u6210\u5c31\u4e07\u4e16\u57fa\u79ef\u6c99\u586b\u6d77 \u68a6\u60f3\u6c38\u5728\u51cc\u4e91\u7ffc\u610f\u6c14\u98ce\u53d1","title":"\u9996\u9875"},{"location":"#_1","text":"","title":"\u4ee3\u7801\u6210\u5c31\u4e07\u4e16\u57fa\u79ef\u6c99\u586b\u6d77"},{"location":"#_2","text":"","title":"\u68a6\u60f3\u6c38\u5728\u51cc\u4e91\u7ffc\u610f\u6c14\u98ce\u53d1"},{"location":"kubernetes/deployments/","text":"\u90e8\u7f72\uff08Deployments\uff09 \u90e8\u7f72\u53ef\u4ee5\u7406\u89e3\u4e3aDocker Swarm\u5f53\u4e2d\u7684\u670d\u52a1\uff08Service\uff09\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u4f1a\u624b\u52a8\u521b\u5efa\u524d\u6587\u5f53\u4e2d\u6240\u63d0\u5230\u7684Pods\uff0c\u800c\u662f\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u90e8\u7f72\uff0c\u518d\u7531\u90e8\u7f72\u4f9d\u636e\u8c03\u5ea6\u539f\u5219\u53bb\u521b\u5efaPods\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u90e8\u7f72\u5728Pods\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u8c03\u5ea6\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u90e8\u7f72\u8fdb\u884c\u6eda\u52a8\u66f4\u65b0\u4ee5\u53ca\u56de\u6eda\uff0cKubernetes\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86Pods\u6c34\u5e73\u81ea\u52a8\u4f38\u7f29\uff08HPA\uff09\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u53bb\u5199\u4f38\u7f29\u811a\u672c\uff09\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5b8c\u6210\u4e00\u4e2a\u90e8\u7f72\uff0c\u4f60\u7684\u4eba\u751f\u624d\u7b97\u5706\u6ee1\u3002 \u63cf\u8ff0\u6587\u4ef6 \u90e8\u7f72\u7684\u63cf\u8ff0\u6587\u4ef6\u53ef\u4ee5\u770b\u4f5c\u662fPod\u63cf\u8ff0\u6587\u4ef6\u7684\u4e00\u4e2a\u7236\u96c6\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: demo-deployment namespace: smartedu labels: app: demo annotations: - name: demo spec: replicas: 32 selector: matchLabels: app: demo template: metadata: labels: app: demo spec: restartPolicy: Always containers: - name: demo image: demo/demo:dev resources: limits: nvidia.com/gpu: 1 requests: nvidia.com/gpu: 1 volumeMounts: - name: logs mountPath: /usr/local/demo/logs volumes: - name: logs hostPath: path: /usr/local/demo/logs \u5b8c\u6210\u90e8\u7f72 \u5982\u4e0a\u6587\u4e00\u6837\uff0c\u5bf9\u4e0a\u9762\u7684\u5185\u5bb9\u505a\u51fa\u7b80\u5355\u7684\u4fee\u6539\u5c31\u80fd\u90e8\u7f72\u7b2c\u4e00\u4e2a\u771f\u00b7\u5e94\u7528\u3002 \u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5f53\u4e2d\u6211\u4eec\u4f1a\u7b80\u8981\u4ecb\u7ecdDeployment\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8ba9\u4f60\u80fd\u771f\u6b63\u5f00\u59cb\u7528\u4e0a\u5e94\u7528\u3002","title":"Deployments"},{"location":"kubernetes/deployments/#deployments","text":"\u90e8\u7f72\u53ef\u4ee5\u7406\u89e3\u4e3aDocker Swarm\u5f53\u4e2d\u7684\u670d\u52a1\uff08Service\uff09\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u4f1a\u624b\u52a8\u521b\u5efa\u524d\u6587\u5f53\u4e2d\u6240\u63d0\u5230\u7684Pods\uff0c\u800c\u662f\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u90e8\u7f72\uff0c\u518d\u7531\u90e8\u7f72\u4f9d\u636e\u8c03\u5ea6\u539f\u5219\u53bb\u521b\u5efaPods\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u90e8\u7f72\u5728Pods\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u8c03\u5ea6\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u90e8\u7f72\u8fdb\u884c\u6eda\u52a8\u66f4\u65b0\u4ee5\u53ca\u56de\u6eda\uff0cKubernetes\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86Pods\u6c34\u5e73\u81ea\u52a8\u4f38\u7f29\uff08HPA\uff09\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u53bb\u5199\u4f38\u7f29\u811a\u672c\uff09\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5b8c\u6210\u4e00\u4e2a\u90e8\u7f72\uff0c\u4f60\u7684\u4eba\u751f\u624d\u7b97\u5706\u6ee1\u3002","title":"\u90e8\u7f72\uff08Deployments\uff09"},{"location":"kubernetes/deployments/#_1","text":"\u90e8\u7f72\u7684\u63cf\u8ff0\u6587\u4ef6\u53ef\u4ee5\u770b\u4f5c\u662fPod\u63cf\u8ff0\u6587\u4ef6\u7684\u4e00\u4e2a\u7236\u96c6\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: demo-deployment namespace: smartedu labels: app: demo annotations: - name: demo spec: replicas: 32 selector: matchLabels: app: demo template: metadata: labels: app: demo spec: restartPolicy: Always containers: - name: demo image: demo/demo:dev resources: limits: nvidia.com/gpu: 1 requests: nvidia.com/gpu: 1 volumeMounts: - name: logs mountPath: /usr/local/demo/logs volumes: - name: logs hostPath: path: /usr/local/demo/logs","title":"\u63cf\u8ff0\u6587\u4ef6"},{"location":"kubernetes/deployments/#_2","text":"\u5982\u4e0a\u6587\u4e00\u6837\uff0c\u5bf9\u4e0a\u9762\u7684\u5185\u5bb9\u505a\u51fa\u7b80\u5355\u7684\u4fee\u6539\u5c31\u80fd\u90e8\u7f72\u7b2c\u4e00\u4e2a\u771f\u00b7\u5e94\u7528\u3002 \u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5f53\u4e2d\u6211\u4eec\u4f1a\u7b80\u8981\u4ecb\u7ecdDeployment\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8ba9\u4f60\u80fd\u771f\u6b63\u5f00\u59cb\u7528\u4e0a\u5e94\u7528\u3002","title":"\u5b8c\u6210\u90e8\u7f72"},{"location":"kubernetes/install/","text":"\u5b89\u88c5 \u7f51\u4e0akubernetes\u5404\u79cd\u5b89\u88c5\u6559\u7a0b\u4e0d\u5c11\uff0c\u4f46\u8981\u4e48\u662f\u4e0a\u53e4\u65f6\u671f\u7684\u7248\u672c\uff0c\u8981\u4e48\u4e09\u8a00\u4e24\u8bed\u5306\u5306\u5e26\u8fc7\u3002\u5c24\u5176\u662f\u5728\u6211\u4eec\u8fd8\u9700\u8981\u7528\u5230\u663e\u5361\u7684\u60c5\u51b5\u4e0b\u2026\u2026\u2026\u2026 \u8fd9\u91cc\u603b\u7ed3\u4e00\u4e0b\u81ea\u5df1\u5b89\u88c5kubernetes\u7684\u5168\u90e8\u8fc7\u7a0b\u3002 \u5b89\u88c5Docker Kubernetes nvidia-docker2 # \u5b89\u88c5\u4f9d\u8d56 apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common # \u6dfb\u52a0Docker\u4ed3\u5e93 # \u6709\u7684\u6559\u7a0b\u8bf4kubernetes\u4e0d\u652f\u6301Docker-CE\uff0c\u53ea\u652f\u6301Docker-IO\uff0c\u76f8\u4fe1\u6211\uff0c\u4ed6\u5728\u80e1\u626f\u3002 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository \\ deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable # \u6dfb\u52a0kubernetes\u4ed3\u5e93 # \u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u6dfb\u52a0\u4ed3\u5e93\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u4ed6\u4eec\u5b98\u65b9\u6587\u6863\u5c31\u662f\u8fd9\u4e48\u5199\u7684\uff0c\u518d\u95ee\u81ea\u6740\ud83d\ude44 curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - cat lt; lt;EOF gt;/etc/apt/sources.list.d/kubernetes.list deb https://apt.kubernetes.io/ kubernetes-xenial main EOF # \u6dfb\u52a0nvidia-docker2\u4ed3\u5e93 docker volume ls -q -f driver=nvidia-docker | xargs -r -I{} -n1 docker ps -q -a -f volume={} | xargs -r docker rm -f curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \\ apt-key add - distribution=$(. /etc/os-release;echo $ID$VERSION_ID) curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \\ tee /etc/apt/sources.list.d/nvidia-docker.list # \u66f4\u65b0\u4ed3\u5e93 apt-get update # \u5b89\u88c5Docker apt-get install docker-ce # \u5b89\u88c5kubernetes apt-get install kubelet kubeadm kubectl # \u5b89\u88c5nvidia-docker2 apt-get install nvidia-docker2 pkill -SIGHUP dockerd \u5c06nvidia-docker2\u4fee\u6539\u4e3adocker\u7684\u9ed8\u8ba4\u8fd0\u884c\u65f6\u73af\u5883 vim /etc/docker/daemon.json { default-runtime : nvidia , runtimes : { nvidia : { path : /usr/bin/nvidia-container-runtime , runtimeArgs : [] } } } sudo service docker restart \u62c9\u53d6\u4f9d\u8d56\u955c\u50cf \u672c\u6b65\u9aa4\u4ec5\u9002\u7528\u4e8e\u4f4d\u4e8eGFW\u5f71\u54cd\u8303\u56f4\u5185\u7684\u4e3b\u673a \u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\uff08\u5982\u679c\u60a8\u9884\u671f\u5b89\u88c5\u7684kubernetes\u7248\u672c\u4e0d\u662fv1.13.2\uff0c\u8bf7\u8fd0\u884ckubeadm config images list\u5e76\u4f9d\u636e\u8fd4\u56de\u7ed3\u679c\u8fd0\u884c\u811a\u672c\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 #!/bin/bash set -e if [ -n $1 ] ; then K8S_VERSION = $1 else K8S_VERSION = v1.13.2 fi if [ -n $2 ] ; then DASHBOARD_VERSION = $2 else DASHBOARD_VERSION = v1.10.1 fi if [ -n $3 ] ; then ETCD_VERSION = $3 else ETCD_VERSION = 3 .2.24 fi if [ -n $4 ] ; then PAUSE_VERSION = $4 else PAUSE_VERSION = 3 .1 fi if [ -n $5 ] ; then DNS_VERSION = $5 else DNS_VERSION = 1 .2.6 fi if [ -n $6 ] ; then FLANNEL_VERSION = $6 else FLANNEL_VERSION = v0.10.0-amd64 fi ## \u62c9\u53d6\u955c\u50cf docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager: $K8S_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler: $K8S_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy: $K8S_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver: $K8S_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64: $DASHBOARD_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd: $ETCD_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause: $PAUSE_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns: $DNS_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/kubernetes_containers/flannel: $FLANNEL_VERSION ## \u4fee\u6539\u6807\u7b7e docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager: $K8S_VERSION k8s.gcr.io/kube-controller-manager: $K8S_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler: $K8S_VERSION k8s.gcr.io/kube-scheduler: $K8S_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy: $K8S_VERSION k8s.gcr.io/kube-proxy: $K8S_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver: $K8S_VERSION k8s.gcr.io kube-apiserver: $K8S_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64: $DASHBOARD_VERSION k8s.gcr.io/kubernetes-dashboard-amd64: $DASHBOARD_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/etcd: $ETCD_VERSION k8s.gcr.io/etcd: $ETCD_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause: $PAUSE_VERSION k8s.gcr.io/pause: $PAUSE_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/coredns: $DNS_VERSION k8s.gcr.io/coredns: $DNS_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/kubernetes_containers/flannel: $FLANNEL_VERSION quay.io/coreos/flannel: $FLANNEL_VERSION ## \u5220\u9664\u539f\u59cb\u6807\u7b7e docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager: $K8S_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler: $K8S_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy: $K8S_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver: $K8S_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64: $DASHBOARD_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/etcd: $ETCD_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/pause: $PAUSE_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/coredns: $DNS_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/kubernetes_containers/flannel: $FLANNEL_VERSION \u521d\u59cb\u5316kubernetes \u51fa\u4e8e\u5bf9\u7f51\u7edc\u901f\u5ea6\u7684\u8003\u8651\uff0c\u6211\u4eec\u4f7f\u7528\u4e86Flannel\u4f5c\u4e3a\u7f51\u7edc\u6a21\u578b\uff0c\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u521d\u59cb\u5316\u53c2\u6570\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u8bf7\u4f9d\u636e\u6307\u5bfc\u521d\u59cb\u5316 kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address= lt;ip-address gt; \u5bfc\u51fa\u914d\u7f6e\u6587\u4ef6 \u5bfc\u51fa\u914d\u7f6e\u6587\u4ef6\u662f\u5341\u5206\u5fc5\u8981\u7684\uff0ckubernetes\u4f1a\u4ece\u5f53\u524d\u64cd\u4f5c\u7528\u6237\u7684~/.kube\u76ee\u5f55\u4e0b\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 # \u5bf9\u4e8e\u666e\u901a\u7528\u6237 mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config # \u5bf9\u4e8eroot\u7528\u6237 export KUBECONFIG=/etc/kubernetes/admin.conf \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u65e0\u6cd5\u8bfb\u53d6\uff0c\u60a8\u5728\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u5f53\u4e2d\u53ef\u80fd\u4f1a\u770b\u5230\u5982\u4e0b\u9519\u8bef\u4e4b\u4e00\uff1a Unable to connect to the server: x509: certificate signed by unknown authority (possibly because of \u201ccrypto/rsa: verification error\u201d while trying to verify candidate authority certificate \u201ckubernetes\u201d) The connection to the server localhost:8080 was refused - did you specify the right host or port? The connection to the server localhost:6443 was refused - did you specify the right host or port? \u90e8\u7f72kubernetes\u7f51\u7edc\u6a21\u578b \u5982\u679c\u60a8\u9009\u62e9\u4e86\u5176\u4ed6\u7f51\u7edc\u6a21\u578b\uff0c\u8bf7\u4f9d\u636e\u6307\u5bfc\u5b8c\u6210\u672c\u6b65\u9aa4 sysctl net.bridge.bridge-nf-call-iptables=1 kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml \u90e8\u7f72NVIDIA\u8bbe\u5907\u63d2\u4ef6 docker pull nvidia/k8s-device-plugin:1.11 # \u5982\u679c\u65e0\u6cd5\u76f4\u63a5\u62c9\u53d6\u955c\u50cf # git clone https://github.com/NVIDIA/k8s-device-plugin.git amp; amp; cd k8s-device-plugin # docker build -t nvidia/k8s-device-plugin:1.11 . docker run --security-opt=no-new-privileges --cap-drop=ALL --network=none -dit -v /var/lib/kubelet/device-plugins:/var/lib/kubelet/device-plugins nvidia/k8s-device-plugin:1.11 kubectl create -f https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/v1.11/nvidia-device-plugin.yml \u90e8\u7f72kubernetes dashboard kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml \u5b89\u88c5\u7ed3\u675f \u81f3\u6b64\uff0ckubernetes\u5df2\u7ecf\u6210\u529f\u5728\u60a8\u7684\u673a\u5668\u4e0a\u5b89\u88c5\uff0c\u8fd0\u884c kubectl get pods --all-namespaces \u68c0\u89c6\u6240\u6709pod\u7684\u8fd0\u884c\u60c5\u51b5 \u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u4ecb\u7ecd\u5982\u4f55\u90e8\u7f72\u7b2c\u4e00\u4e2a\u5e94\u7528\u3002","title":"\u5b89\u88c5"},{"location":"kubernetes/install/#_1","text":"\u7f51\u4e0akubernetes\u5404\u79cd\u5b89\u88c5\u6559\u7a0b\u4e0d\u5c11\uff0c\u4f46\u8981\u4e48\u662f\u4e0a\u53e4\u65f6\u671f\u7684\u7248\u672c\uff0c\u8981\u4e48\u4e09\u8a00\u4e24\u8bed\u5306\u5306\u5e26\u8fc7\u3002\u5c24\u5176\u662f\u5728\u6211\u4eec\u8fd8\u9700\u8981\u7528\u5230\u663e\u5361\u7684\u60c5\u51b5\u4e0b\u2026\u2026\u2026\u2026 \u8fd9\u91cc\u603b\u7ed3\u4e00\u4e0b\u81ea\u5df1\u5b89\u88c5kubernetes\u7684\u5168\u90e8\u8fc7\u7a0b\u3002","title":"\u5b89\u88c5"},{"location":"kubernetes/install/#docker-kubernetes-nvidia-docker2","text":"# \u5b89\u88c5\u4f9d\u8d56 apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common # \u6dfb\u52a0Docker\u4ed3\u5e93 # \u6709\u7684\u6559\u7a0b\u8bf4kubernetes\u4e0d\u652f\u6301Docker-CE\uff0c\u53ea\u652f\u6301Docker-IO\uff0c\u76f8\u4fe1\u6211\uff0c\u4ed6\u5728\u80e1\u626f\u3002 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository \\ deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable # \u6dfb\u52a0kubernetes\u4ed3\u5e93 # \u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u6dfb\u52a0\u4ed3\u5e93\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u4ed6\u4eec\u5b98\u65b9\u6587\u6863\u5c31\u662f\u8fd9\u4e48\u5199\u7684\uff0c\u518d\u95ee\u81ea\u6740\ud83d\ude44 curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - cat lt; lt;EOF gt;/etc/apt/sources.list.d/kubernetes.list deb https://apt.kubernetes.io/ kubernetes-xenial main EOF # \u6dfb\u52a0nvidia-docker2\u4ed3\u5e93 docker volume ls -q -f driver=nvidia-docker | xargs -r -I{} -n1 docker ps -q -a -f volume={} | xargs -r docker rm -f curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \\ apt-key add - distribution=$(. /etc/os-release;echo $ID$VERSION_ID) curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \\ tee /etc/apt/sources.list.d/nvidia-docker.list # \u66f4\u65b0\u4ed3\u5e93 apt-get update # \u5b89\u88c5Docker apt-get install docker-ce # \u5b89\u88c5kubernetes apt-get install kubelet kubeadm kubectl # \u5b89\u88c5nvidia-docker2 apt-get install nvidia-docker2 pkill -SIGHUP dockerd \u5c06nvidia-docker2\u4fee\u6539\u4e3adocker\u7684\u9ed8\u8ba4\u8fd0\u884c\u65f6\u73af\u5883 vim /etc/docker/daemon.json { default-runtime : nvidia , runtimes : { nvidia : { path : /usr/bin/nvidia-container-runtime , runtimeArgs : [] } } } sudo service docker restart","title":"\u5b89\u88c5Docker &amp;&amp; Kubernetes &amp;&amp; nvidia-docker2"},{"location":"kubernetes/install/#_2","text":"","title":"\u62c9\u53d6\u4f9d\u8d56\u955c\u50cf"},{"location":"kubernetes/install/#gfw","text":"\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\uff08\u5982\u679c\u60a8\u9884\u671f\u5b89\u88c5\u7684kubernetes\u7248\u672c\u4e0d\u662fv1.13.2\uff0c\u8bf7\u8fd0\u884ckubeadm config images list\u5e76\u4f9d\u636e\u8fd4\u56de\u7ed3\u679c\u8fd0\u884c\u811a\u672c\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 #!/bin/bash set -e if [ -n $1 ] ; then K8S_VERSION = $1 else K8S_VERSION = v1.13.2 fi if [ -n $2 ] ; then DASHBOARD_VERSION = $2 else DASHBOARD_VERSION = v1.10.1 fi if [ -n $3 ] ; then ETCD_VERSION = $3 else ETCD_VERSION = 3 .2.24 fi if [ -n $4 ] ; then PAUSE_VERSION = $4 else PAUSE_VERSION = 3 .1 fi if [ -n $5 ] ; then DNS_VERSION = $5 else DNS_VERSION = 1 .2.6 fi if [ -n $6 ] ; then FLANNEL_VERSION = $6 else FLANNEL_VERSION = v0.10.0-amd64 fi ## \u62c9\u53d6\u955c\u50cf docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager: $K8S_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler: $K8S_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy: $K8S_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver: $K8S_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64: $DASHBOARD_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd: $ETCD_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause: $PAUSE_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns: $DNS_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/kubernetes_containers/flannel: $FLANNEL_VERSION ## \u4fee\u6539\u6807\u7b7e docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager: $K8S_VERSION k8s.gcr.io/kube-controller-manager: $K8S_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler: $K8S_VERSION k8s.gcr.io/kube-scheduler: $K8S_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy: $K8S_VERSION k8s.gcr.io/kube-proxy: $K8S_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver: $K8S_VERSION k8s.gcr.io kube-apiserver: $K8S_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64: $DASHBOARD_VERSION k8s.gcr.io/kubernetes-dashboard-amd64: $DASHBOARD_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/etcd: $ETCD_VERSION k8s.gcr.io/etcd: $ETCD_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause: $PAUSE_VERSION k8s.gcr.io/pause: $PAUSE_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/coredns: $DNS_VERSION k8s.gcr.io/coredns: $DNS_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/kubernetes_containers/flannel: $FLANNEL_VERSION quay.io/coreos/flannel: $FLANNEL_VERSION ## \u5220\u9664\u539f\u59cb\u6807\u7b7e docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager: $K8S_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler: $K8S_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy: $K8S_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver: $K8S_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64: $DASHBOARD_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/etcd: $ETCD_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/pause: $PAUSE_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/coredns: $DNS_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/kubernetes_containers/flannel: $FLANNEL_VERSION","title":"\u672c\u6b65\u9aa4\u4ec5\u9002\u7528\u4e8e\u4f4d\u4e8eGFW\u5f71\u54cd\u8303\u56f4\u5185\u7684\u4e3b\u673a"},{"location":"kubernetes/install/#kubernetes","text":"","title":"\u521d\u59cb\u5316kubernetes"},{"location":"kubernetes/install/#flannel","text":"kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address= lt;ip-address gt;","title":"\u51fa\u4e8e\u5bf9\u7f51\u7edc\u901f\u5ea6\u7684\u8003\u8651\uff0c\u6211\u4eec\u4f7f\u7528\u4e86Flannel\u4f5c\u4e3a\u7f51\u7edc\u6a21\u578b\uff0c\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u521d\u59cb\u5316\u53c2\u6570\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u8bf7\u4f9d\u636e\u6307\u5bfc\u521d\u59cb\u5316"},{"location":"kubernetes/install/#_3","text":"","title":"\u5bfc\u51fa\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/install/#kuberneteskube","text":"# \u5bf9\u4e8e\u666e\u901a\u7528\u6237 mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config # \u5bf9\u4e8eroot\u7528\u6237 export KUBECONFIG=/etc/kubernetes/admin.conf","title":"\u5bfc\u51fa\u914d\u7f6e\u6587\u4ef6\u662f\u5341\u5206\u5fc5\u8981\u7684\uff0ckubernetes\u4f1a\u4ece\u5f53\u524d\u64cd\u4f5c\u7528\u6237\u7684~/.kube\u76ee\u5f55\u4e0b\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/install/#_4","text":"Unable to connect to the server: x509: certificate signed by unknown authority (possibly because of \u201ccrypto/rsa: verification error\u201d while trying to verify candidate authority certificate \u201ckubernetes\u201d) The connection to the server localhost:8080 was refused - did you specify the right host or port? The connection to the server localhost:6443 was refused - did you specify the right host or port?","title":"\u5982\u679c\u914d\u7f6e\u6587\u4ef6\u65e0\u6cd5\u8bfb\u53d6\uff0c\u60a8\u5728\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u5f53\u4e2d\u53ef\u80fd\u4f1a\u770b\u5230\u5982\u4e0b\u9519\u8bef\u4e4b\u4e00\uff1a"},{"location":"kubernetes/install/#kubernetes_1","text":"","title":"\u90e8\u7f72kubernetes\u7f51\u7edc\u6a21\u578b"},{"location":"kubernetes/install/#_5","text":"sysctl net.bridge.bridge-nf-call-iptables=1 kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml","title":"\u5982\u679c\u60a8\u9009\u62e9\u4e86\u5176\u4ed6\u7f51\u7edc\u6a21\u578b\uff0c\u8bf7\u4f9d\u636e\u6307\u5bfc\u5b8c\u6210\u672c\u6b65\u9aa4"},{"location":"kubernetes/install/#nvidia","text":"docker pull nvidia/k8s-device-plugin:1.11 # \u5982\u679c\u65e0\u6cd5\u76f4\u63a5\u62c9\u53d6\u955c\u50cf # git clone https://github.com/NVIDIA/k8s-device-plugin.git amp; amp; cd k8s-device-plugin # docker build -t nvidia/k8s-device-plugin:1.11 . docker run --security-opt=no-new-privileges --cap-drop=ALL --network=none -dit -v /var/lib/kubelet/device-plugins:/var/lib/kubelet/device-plugins nvidia/k8s-device-plugin:1.11 kubectl create -f https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/v1.11/nvidia-device-plugin.yml","title":"\u90e8\u7f72NVIDIA\u8bbe\u5907\u63d2\u4ef6"},{"location":"kubernetes/install/#kubernetes-dashboard","text":"kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml","title":"\u90e8\u7f72kubernetes dashboard"},{"location":"kubernetes/install/#_6","text":"\u81f3\u6b64\uff0ckubernetes\u5df2\u7ecf\u6210\u529f\u5728\u60a8\u7684\u673a\u5668\u4e0a\u5b89\u88c5\uff0c\u8fd0\u884c kubectl get pods --all-namespaces \u68c0\u89c6\u6240\u6709pod\u7684\u8fd0\u884c\u60c5\u51b5 \u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u4ecb\u7ecd\u5982\u4f55\u90e8\u7f72\u7b2c\u4e00\u4e2a\u5e94\u7528\u3002","title":"\u5b89\u88c5\u7ed3\u675f"},{"location":"kubernetes/introduction_to_kubernetes/","text":"kubernetes\u5bfc\u8bba Kubernetes\uff0c\u4f5c\u4e3aGoogle\u5728\u8fd0\u884c\u591a\u5e74\u7684Borg\u57fa\u7840\u4e0a\u5f00\u53d1\u7684\u5f00\u6e90\u5bb9\u5668\u7f16\u6392\u7cfb\u7edf\uff0c\u5728\u90e8\u7f72\u3001\u4f38\u7f29\u53ca\u7ba1\u7406\u65b9\u9762\u5177\u6709\u5f3a\u5927\u7684\u80fd\u529b\u3002 \u548c\u5f88\u591a\u521d\u5b66\u8005\u6240\u60f3\u7684\u4e0d\u4e00\u6837\uff0ckubernetes\u5e76\u975e\u662f\u4e3aDocker\u800c\u751f\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u8fd8\u652f\u6301Rocket\u8fd9\u6837\u7684\u5bb9\u5668\u6280\u672f\u3002\u4f46\u5728\u672c\u7ad9\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u8ba8\u8bbakubernetes\u5728\u5176\u4ed6\u5bb9\u5668\u6280\u672f\u4e0a\u7684\u5e94\u7528\u3002\u6211\u4eec\u9f13\u52b1\u60a8\u5728\u7f51\u4e0a\u5bfb\u627e\u5176\u4ed6\u4fe1\u606f\uff0c\u5982\u679c\u60a8\u6709\u8fd9\u65b9\u9762\u7684\u9700\u6c42\uff0c\u6211\u4eec\u540c\u65f6\u5f88\u6b22\u8fce\u60a8\u5c06\u60a8\u6240\u627e\u5230\u7684\u5185\u5bb9\u6574\u7406\u6210\u6587\u7ae0\u5e76\u63d0\u4ea4\u5728\u672c\u7ad9\u5f53\u4e2d\u3002 Kubernetes\u67b6\u6784 Kuberenetes\u7531\u4e94\u5c42\u7ed3\u6784\u6784\u6210\u3002 Kubernetes\u7ec4\u4ef6 \u57fa\u7840\u7684kubernetes\u7531\u4e03\u4e2a\u7ec4\u4ef6\u6784\u6210\uff0c\u4ed6\u4eec\u662f\uff1a - etcd \u96c6\u7fa4\u4fe1\u606f\u4fdd\u5b58\uff08\u96c6\u7fa4\uff09 - apiserver \u96c6\u7fa4\u64cd\u4f5c\u5165\u53e3\uff08\u4e3b\u673a\uff09 - scheduler \u96c6\u7fa4\u8d44\u6e90\u8c03\u5ea6\uff08\u4e3b\u673a\uff09 - controller manager \u96c6\u7fa4\u72b6\u6001\u7ef4\u62a4\uff08\u4e3b\u673a\uff09 - kubelet \u955c\u50cf\u3001\u5bb9\u5668\u3001\u6570\u636e\u5377\uff08CVI\uff09\u3001\u7f51\u7edc\uff08CNI\uff09\u7b49\u7684\u7ba1\u7406\uff08\u4ece\u673a\uff09 - container runtime \u955c\u50cf\u548cPod\uff08CRI\uff09\u7684\u7ba1\u7406\uff08\u4ece\u673a\uff09 - kube-proxy \u96c6\u7fa4\u7684\u670d\u52a1\u53d1\u73b0\u548c\u8d1f\u8f7d\u5747\u8861\uff08\u4ece\u673a\uff09","title":"Kubernetes\u5bfc\u8bba"},{"location":"kubernetes/introduction_to_kubernetes/#kubernetes","text":"Kubernetes\uff0c\u4f5c\u4e3aGoogle\u5728\u8fd0\u884c\u591a\u5e74\u7684Borg\u57fa\u7840\u4e0a\u5f00\u53d1\u7684\u5f00\u6e90\u5bb9\u5668\u7f16\u6392\u7cfb\u7edf\uff0c\u5728\u90e8\u7f72\u3001\u4f38\u7f29\u53ca\u7ba1\u7406\u65b9\u9762\u5177\u6709\u5f3a\u5927\u7684\u80fd\u529b\u3002 \u548c\u5f88\u591a\u521d\u5b66\u8005\u6240\u60f3\u7684\u4e0d\u4e00\u6837\uff0ckubernetes\u5e76\u975e\u662f\u4e3aDocker\u800c\u751f\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u8fd8\u652f\u6301Rocket\u8fd9\u6837\u7684\u5bb9\u5668\u6280\u672f\u3002\u4f46\u5728\u672c\u7ad9\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u8ba8\u8bbakubernetes\u5728\u5176\u4ed6\u5bb9\u5668\u6280\u672f\u4e0a\u7684\u5e94\u7528\u3002\u6211\u4eec\u9f13\u52b1\u60a8\u5728\u7f51\u4e0a\u5bfb\u627e\u5176\u4ed6\u4fe1\u606f\uff0c\u5982\u679c\u60a8\u6709\u8fd9\u65b9\u9762\u7684\u9700\u6c42\uff0c\u6211\u4eec\u540c\u65f6\u5f88\u6b22\u8fce\u60a8\u5c06\u60a8\u6240\u627e\u5230\u7684\u5185\u5bb9\u6574\u7406\u6210\u6587\u7ae0\u5e76\u63d0\u4ea4\u5728\u672c\u7ad9\u5f53\u4e2d\u3002","title":"kubernetes\u5bfc\u8bba"},{"location":"kubernetes/introduction_to_kubernetes/#kubernetes_1","text":"Kuberenetes\u7531\u4e94\u5c42\u7ed3\u6784\u6784\u6210\u3002","title":"Kubernetes\u67b6\u6784"},{"location":"kubernetes/introduction_to_kubernetes/#kubernetes_2","text":"\u57fa\u7840\u7684kubernetes\u7531\u4e03\u4e2a\u7ec4\u4ef6\u6784\u6210\uff0c\u4ed6\u4eec\u662f\uff1a - etcd \u96c6\u7fa4\u4fe1\u606f\u4fdd\u5b58\uff08\u96c6\u7fa4\uff09 - apiserver \u96c6\u7fa4\u64cd\u4f5c\u5165\u53e3\uff08\u4e3b\u673a\uff09 - scheduler \u96c6\u7fa4\u8d44\u6e90\u8c03\u5ea6\uff08\u4e3b\u673a\uff09 - controller manager \u96c6\u7fa4\u72b6\u6001\u7ef4\u62a4\uff08\u4e3b\u673a\uff09 - kubelet \u955c\u50cf\u3001\u5bb9\u5668\u3001\u6570\u636e\u5377\uff08CVI\uff09\u3001\u7f51\u7edc\uff08CNI\uff09\u7b49\u7684\u7ba1\u7406\uff08\u4ece\u673a\uff09 - container runtime \u955c\u50cf\u548cPod\uff08CRI\uff09\u7684\u7ba1\u7406\uff08\u4ece\u673a\uff09 - kube-proxy \u96c6\u7fa4\u7684\u670d\u52a1\u53d1\u73b0\u548c\u8d1f\u8f7d\u5747\u8861\uff08\u4ece\u673a\uff09","title":"Kubernetes\u7ec4\u4ef6"},{"location":"kubernetes/pods/","text":"Pods \u5bf9\u4e8eKubernetes\u6765\u8bf4\uff0c\u6700\u5c0f\u7684\u90e8\u7f72\u5355\u5143\u662f\u4e00\u4e2aPod\u3002 \u6b63\u5982\u4ed6\u7684\u540d\u5b57\uff08\u8c46\u835a\uff09\u90a3\u6837\uff0c\u4e00\u4e2aPod\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5bb9\u5668\uff0c\u4ed6\u4eec\u5171\u4eab\u547d\u540d\u7a7a\u95f4\u3001\u6570\u636e\u5377\u3001\u7f51\u7edc\u5e76\u53ef\u4ee5\u8fdb\u884c\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002 \u76f8\u6bd4\u5bb9\u5668\uff0cPod\u5728\u8fd9\u91cc\u66f4\u50cf\u4e00\u4e2a\u865a\u62df\u673a--\u5982\u679c\u4f60\u628a\u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\u6240\u9700\u7684\u6240\u6709\u5bb9\u5668\u90fd\u653e\u5728\u4e00\u4e2aPod\u5f53\u4e2d\uff0c\u90a3\u8fd9\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u72ec\u7acb\u7684\u8282\u70b9\u4e86\uff01 \u63cf\u8ff0\u6587\u4ef6 \u4e00\u4e2a\u7b80\u5355\u7684Pod\u7684\u63cf\u8ff0\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a apiVersion: v1 kind: Pod metadata: name: demo namespace: demo labels: app: demo annotations: - name: demo spec: restartPolicy: Always containers: - name: demo image: demo/demo:dev resources: limits: nvidia.com/gpu: 1 requests: nvidia.com/gpu: 1 volumeMounts: - name: logs mountPath: /usr/local/demo/logs volumes: - name: logs hostPath: path: /usr/local/demo/logs \u5b8c\u6210\u90e8\u7f72 \u5bf9\u4e0a\u9762\u7684\u5185\u5bb9\u505a\u51fa\u5c11\u8bb8\u4fee\u6539\uff08\u6bd4\u5982\u4f60\u53ef\u80fd\u4e0d\u9700\u8981\u6302\u8f7d\u65e5\u5fd7\u6587\u4ef6\uff0c\u4e5f\u4e0d\u9700\u8981\u4f7f\u7528GPU\uff09\u5e76\u5728\u672c\u5730\u5e94\u7528\uff0c\u4f60\u7684\u7b2c\u4e00\u4e2a\u5e94\u7528\u5c31\u5b8c\u6210\u90e8\u7f72\u4e86\u3002 \u4f46\u662f\uff0c\u4f5c\u4e3a\u6700\u5c0f\u7684\u90e8\u7f72\u5355\u5143\uff0c\u6211\u4eec\u4ec5\u4ec5\u662f\u5c06\u51e0\u4e2a\u5bb9\u5668\u5408\u5e76\u5728\u4e86\u4e00\u4e2a\u5355\u5143\u5f53\u4e2d\uff0c\u800c\u5e76\u6ca1\u6709\u5b9e\u73b0\u5176\u4ed6\u7684\u529f\u80fd--\u6bd4\u5982\u8bf4\uff0c\u6700\u91cd\u8981\u7684\uff0c\u5bb9\u5668\u8c03\u5ea6\u3002 \u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5f53\u4e2d\u6211\u4eec\u5c06\u4f1a\u7b80\u8981\u4ecb\u7ecdDeployment\uff0c\u5b8c\u6210\u4e00\u4e2a\u771f\u6b63\u7684\u5e94\u7528\u90e8\u7f72\u3002","title":"Pods"},{"location":"kubernetes/pods/#pods","text":"\u5bf9\u4e8eKubernetes\u6765\u8bf4\uff0c\u6700\u5c0f\u7684\u90e8\u7f72\u5355\u5143\u662f\u4e00\u4e2aPod\u3002 \u6b63\u5982\u4ed6\u7684\u540d\u5b57\uff08\u8c46\u835a\uff09\u90a3\u6837\uff0c\u4e00\u4e2aPod\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5bb9\u5668\uff0c\u4ed6\u4eec\u5171\u4eab\u547d\u540d\u7a7a\u95f4\u3001\u6570\u636e\u5377\u3001\u7f51\u7edc\u5e76\u53ef\u4ee5\u8fdb\u884c\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002 \u76f8\u6bd4\u5bb9\u5668\uff0cPod\u5728\u8fd9\u91cc\u66f4\u50cf\u4e00\u4e2a\u865a\u62df\u673a--\u5982\u679c\u4f60\u628a\u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\u6240\u9700\u7684\u6240\u6709\u5bb9\u5668\u90fd\u653e\u5728\u4e00\u4e2aPod\u5f53\u4e2d\uff0c\u90a3\u8fd9\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u72ec\u7acb\u7684\u8282\u70b9\u4e86\uff01","title":"Pods"},{"location":"kubernetes/pods/#_1","text":"\u4e00\u4e2a\u7b80\u5355\u7684Pod\u7684\u63cf\u8ff0\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a apiVersion: v1 kind: Pod metadata: name: demo namespace: demo labels: app: demo annotations: - name: demo spec: restartPolicy: Always containers: - name: demo image: demo/demo:dev resources: limits: nvidia.com/gpu: 1 requests: nvidia.com/gpu: 1 volumeMounts: - name: logs mountPath: /usr/local/demo/logs volumes: - name: logs hostPath: path: /usr/local/demo/logs","title":"\u63cf\u8ff0\u6587\u4ef6"},{"location":"kubernetes/pods/#_2","text":"\u5bf9\u4e0a\u9762\u7684\u5185\u5bb9\u505a\u51fa\u5c11\u8bb8\u4fee\u6539\uff08\u6bd4\u5982\u4f60\u53ef\u80fd\u4e0d\u9700\u8981\u6302\u8f7d\u65e5\u5fd7\u6587\u4ef6\uff0c\u4e5f\u4e0d\u9700\u8981\u4f7f\u7528GPU\uff09\u5e76\u5728\u672c\u5730\u5e94\u7528\uff0c\u4f60\u7684\u7b2c\u4e00\u4e2a\u5e94\u7528\u5c31\u5b8c\u6210\u90e8\u7f72\u4e86\u3002 \u4f46\u662f\uff0c\u4f5c\u4e3a\u6700\u5c0f\u7684\u90e8\u7f72\u5355\u5143\uff0c\u6211\u4eec\u4ec5\u4ec5\u662f\u5c06\u51e0\u4e2a\u5bb9\u5668\u5408\u5e76\u5728\u4e86\u4e00\u4e2a\u5355\u5143\u5f53\u4e2d\uff0c\u800c\u5e76\u6ca1\u6709\u5b9e\u73b0\u5176\u4ed6\u7684\u529f\u80fd--\u6bd4\u5982\u8bf4\uff0c\u6700\u91cd\u8981\u7684\uff0c\u5bb9\u5668\u8c03\u5ea6\u3002 \u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5f53\u4e2d\u6211\u4eec\u5c06\u4f1a\u7b80\u8981\u4ecb\u7ecdDeployment\uff0c\u5b8c\u6210\u4e00\u4e2a\u771f\u6b63\u7684\u5e94\u7528\u90e8\u7f72\u3002","title":"\u5b8c\u6210\u90e8\u7f72"},{"location":"master/about/","text":"\u5173\u4e8e \u6b22\u8fce","title":"\u5173\u4e8e"},{"location":"master/about/#_1","text":"\u6b22\u8fce","title":"\u5173\u4e8e"},{"location":"master/curriculum_vitae/","text":"\u9648\u965f\u539f \u6559\u80b2\u7ecf\u5386 \u4fe1\u606f\u6280\u672f\u5b66\u58eb \u9ad8\u7b49\u667a\u80fd\u7cfb\u7edf\u4e13\u4e1a \u6fb3\u5927\u5229\u4e9a\u56fd\u7acb\u5927\u5b66 - Java - \u8ba1\u7b97\u673a\u89c6\u89c9 \u5de5\u4f5c\u7ecf\u5386 \u5b9e\u4e60\u751f \u8054\u60f3\u7814\u7a76\u9662 2017 \u4e8c\u6708 - \u73b0\u5728 - .Net\u524d\u7aef - Python\u4e2d\u95f4\u4ef6\uff08\u5e76\u53d1\u3001RabbitMQ\u3001Redis\uff09 - Java\u540e\u7aef\uff08SpringMVC\u3001RabbitMQ\u3001MySQL\uff09 - Kubernetes - Docker \u56fd\u9645\u6691\u671f\u5b66\u6821\u52a9\u7406 \u5317\u4eac\u5927\u5b66 - \u5b66\u751f\u670d\u52a1 - \u6d3b\u52a8\u7ec4\u7ec7 \u52a9\u6559 \u5b66\u4f4d\u8d35 - \u534f\u52a9\u6559\u5e08\u5b8c\u6210\u6559\u5b66\u4efb\u52a1 - \u534f\u52a9\u8fd0\u8425\u5fae\u4fe1\u516c\u4f17\u53f7 \u4e13\u4e1a\u7ecf\u5386 \u7f51\u9875\u5f00\u53d1 \u5317\u4eac\u5927\u5b66 - \u5317\u4eac\u5927\u5b66\u56fd\u9645\u5173\u7cfb\u5b66\u9662\u7684\u65b0\u7248\u7f51\u7ad9\u8bbe\u8ba1 \u7b2c\u4e00\u6444\u5f71\u52a9\u7406 \u65e9\u6849\uff08\u5fae\u7535\u5f71\uff09 - \u6444\u5f71\u673a\u64cd\u4f5c - \u65e0\u4eba\u673a\u64cd\u4f5c \u6267\u884c\u5bfc\u6f14 \u4e00\u6b21\u522b\u79bb\uff08\u5fae\u7535\u5f71\uff09 - \u5f55\u97f3 - \u706f\u5149 - \u65e0\u4eba\u673a\u64cd\u4f5c \u5fd7\u613f\u8005\u7ecf\u5386 SET4ANU\u5fd7\u613f\u8005 \u6fb3\u5927\u5229\u4e9a\u56fd\u7acb\u5927\u5b66 - \u5e26\u9886\u65b0\u751f\u6e38\u89c8\u6821\u56ed \u8bb2\u5e08 AI\u7814\u4e60\u793e - \u4e3e\u529e\u6709\u5173T-SNE\u7b97\u6cd5\u7b49\u7684\u8bb2\u5ea7 - \u53c2\u4e0e\u65af\u5766\u798f\u5927\u5b66CS224N\u3001CS231N\u7b49\u8bfe\u7a0b\u7684\u7ffb\u8bd1\u3001\u6821\u5bf9\u5de5\u4f5c \u4eba\u9053\u5b89\u7f6e\u5fd7\u613f\u8005 \u6fb3\u5927\u5229\u4e9a\u7ea2\u5341\u5b57\u4f1a - \u534f\u52a9\u96be\u6c11\u5728\u582a\u57f9\u62c9\u5b89\u7f6e \u65b0\u5a92\u4f53\u8fd0\u8425 \u767e\u5ea6 - \u521b\u5efa\u5e76\u7ba1\u7406\u767e\u5ea6\u767e\u79d1\u65b0\u5a92\u4f53\u8fd0\u8425\u56e2\u961f\uff0c\u767e\u79d1MT - \u8fd0\u8425\u767e\u79d1\u6821\u56ed\u8d34\u5427\u3001\u5fae\u4fe1\u516c\u4f17\u53f7\u3001\u5fae\u535a - \u4e3a\u767e\u79d1\u6821\u56ed\u6d3b\u52a8\u63d0\u4f9b\u7ebf\u4e0a\u652f\u6301 - \u534f\u52a9\u767e\u79d1\u6821\u56ed\u5206\u90e8\u65b0\u5a92\u4f53\u56e2\u961f\u7684\u8fd0\u8425","title":"\u7b80\u5386"},{"location":"master/curriculum_vitae/#_1","text":"","title":"\u9648\u965f\u539f"},{"location":"master/curriculum_vitae/#amp122amp99amp64amp105amp110amp116amp46amp97amp99amp46amp99amp110","text":"","title":"&#122;&#99;&#64;&#105;&#110;&#116;&#46;&#97;&#99;&#46;&#99;&#110;"},{"location":"master/curriculum_vitae/#_2","text":"","title":"\u6559\u80b2\u7ecf\u5386"},{"location":"master/curriculum_vitae/#_3","text":"","title":"\u4fe1\u606f\u6280\u672f\u5b66\u58eb \u9ad8\u7b49\u667a\u80fd\u7cfb\u7edf\u4e13\u4e1a"},{"location":"master/curriculum_vitae/#_4","text":"- Java - \u8ba1\u7b97\u673a\u89c6\u89c9","title":"\u6fb3\u5927\u5229\u4e9a\u56fd\u7acb\u5927\u5b66"},{"location":"master/curriculum_vitae/#_5","text":"","title":"\u5de5\u4f5c\u7ecf\u5386"},{"location":"master/curriculum_vitae/#_6","text":"","title":"\u5b9e\u4e60\u751f"},{"location":"master/curriculum_vitae/#_7","text":"","title":"\u8054\u60f3\u7814\u7a76\u9662"},{"location":"master/curriculum_vitae/#2017-","text":"- .Net\u524d\u7aef - Python\u4e2d\u95f4\u4ef6\uff08\u5e76\u53d1\u3001RabbitMQ\u3001Redis\uff09 - Java\u540e\u7aef\uff08SpringMVC\u3001RabbitMQ\u3001MySQL\uff09 - Kubernetes - Docker","title":"2017 \u4e8c\u6708 - \u73b0\u5728"},{"location":"master/curriculum_vitae/#_8","text":"","title":"\u56fd\u9645\u6691\u671f\u5b66\u6821\u52a9\u7406"},{"location":"master/curriculum_vitae/#_9","text":"- \u5b66\u751f\u670d\u52a1 - \u6d3b\u52a8\u7ec4\u7ec7","title":"\u5317\u4eac\u5927\u5b66"},{"location":"master/curriculum_vitae/#_10","text":"","title":"\u52a9\u6559"},{"location":"master/curriculum_vitae/#_11","text":"- \u534f\u52a9\u6559\u5e08\u5b8c\u6210\u6559\u5b66\u4efb\u52a1 - \u534f\u52a9\u8fd0\u8425\u5fae\u4fe1\u516c\u4f17\u53f7","title":"\u5b66\u4f4d\u8d35"},{"location":"master/curriculum_vitae/#_12","text":"","title":"\u4e13\u4e1a\u7ecf\u5386"},{"location":"master/curriculum_vitae/#_13","text":"","title":"\u7f51\u9875\u5f00\u53d1"},{"location":"master/curriculum_vitae/#_14","text":"- \u5317\u4eac\u5927\u5b66\u56fd\u9645\u5173\u7cfb\u5b66\u9662\u7684\u65b0\u7248\u7f51\u7ad9\u8bbe\u8ba1","title":"\u5317\u4eac\u5927\u5b66"},{"location":"master/curriculum_vitae/#_15","text":"","title":"\u7b2c\u4e00\u6444\u5f71\u52a9\u7406"},{"location":"master/curriculum_vitae/#_16","text":"- \u6444\u5f71\u673a\u64cd\u4f5c - \u65e0\u4eba\u673a\u64cd\u4f5c","title":"\u65e9\u6849\uff08\u5fae\u7535\u5f71\uff09"},{"location":"master/curriculum_vitae/#_17","text":"","title":"\u6267\u884c\u5bfc\u6f14"},{"location":"master/curriculum_vitae/#_18","text":"- \u5f55\u97f3 - \u706f\u5149 - \u65e0\u4eba\u673a\u64cd\u4f5c","title":"\u4e00\u6b21\u522b\u79bb\uff08\u5fae\u7535\u5f71\uff09"},{"location":"master/curriculum_vitae/#_19","text":"","title":"\u5fd7\u613f\u8005\u7ecf\u5386"},{"location":"master/curriculum_vitae/#set4anu","text":"","title":"SET4ANU\u5fd7\u613f\u8005"},{"location":"master/curriculum_vitae/#_20","text":"- \u5e26\u9886\u65b0\u751f\u6e38\u89c8\u6821\u56ed","title":"\u6fb3\u5927\u5229\u4e9a\u56fd\u7acb\u5927\u5b66"},{"location":"master/curriculum_vitae/#_21","text":"","title":"\u8bb2\u5e08"},{"location":"master/curriculum_vitae/#ai","text":"- \u4e3e\u529e\u6709\u5173T-SNE\u7b97\u6cd5\u7b49\u7684\u8bb2\u5ea7 - \u53c2\u4e0e\u65af\u5766\u798f\u5927\u5b66CS224N\u3001CS231N\u7b49\u8bfe\u7a0b\u7684\u7ffb\u8bd1\u3001\u6821\u5bf9\u5de5\u4f5c","title":"AI\u7814\u4e60\u793e"},{"location":"master/curriculum_vitae/#_22","text":"","title":"\u4eba\u9053\u5b89\u7f6e\u5fd7\u613f\u8005"},{"location":"master/curriculum_vitae/#_23","text":"- \u534f\u52a9\u96be\u6c11\u5728\u582a\u57f9\u62c9\u5b89\u7f6e","title":"\u6fb3\u5927\u5229\u4e9a\u7ea2\u5341\u5b57\u4f1a"},{"location":"master/curriculum_vitae/#_24","text":"","title":"\u65b0\u5a92\u4f53\u8fd0\u8425"},{"location":"master/curriculum_vitae/#_25","text":"- \u521b\u5efa\u5e76\u7ba1\u7406\u767e\u5ea6\u767e\u79d1\u65b0\u5a92\u4f53\u8fd0\u8425\u56e2\u961f\uff0c\u767e\u79d1MT - \u8fd0\u8425\u767e\u79d1\u6821\u56ed\u8d34\u5427\u3001\u5fae\u4fe1\u516c\u4f17\u53f7\u3001\u5fae\u535a - \u4e3a\u767e\u79d1\u6821\u56ed\u6d3b\u52a8\u63d0\u4f9b\u7ebf\u4e0a\u652f\u6301 - \u534f\u52a9\u767e\u79d1\u6821\u56ed\u5206\u90e8\u65b0\u5a92\u4f53\u56e2\u961f\u7684\u8fd0\u8425","title":"\u767e\u5ea6"},{"location":"pku/logos_of_schools_of_pku/","text":"","title":"Logos of schools of pku"}]}